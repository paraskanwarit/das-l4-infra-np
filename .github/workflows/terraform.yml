name: Terraform Apply

on:
  push:
    branches: [ "main" ]
    paths:
      - 'environments/non-prod/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (leave empty for all)'
        required: false
        type: string
        default: ''

jobs:
  apply:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/566479143581/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider'
          service_account: 'github-actions-sa@affable-beaker-464822-b4.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy Environments
        run: |
          # Get environments to deploy
          if [ -n "${{ github.event.inputs.environment }}" ]; then
            ENVIRONMENTS="${{ github.event.inputs.environment }}"
            echo "Manual deploy requested for: $ENVIRONMENTS"
          else
            ENVIRONMENTS=$(find environments/non-prod -maxdepth 1 -type d -name "*" | grep -v "^environments/non-prod$" | xargs -I {} sh -c 'if [ -f "{}/main.tf" ]; then basename "{}"; fi' | sort)
            echo "Auto-detected environments: $ENVIRONMENTS"
          fi
          
          # Deploy each environment
          for ENV in $ENVIRONMENTS; do
            echo "ðŸš€ Deploying $ENV environment..."
            
            ENV_PATH="environments/non-prod/$ENV"
            INSTANCE_NAME="${ENV}-sql-instance"
            
            # Generate passwords
            ROOT_PASSWORD=$(openssl rand -base64 24 | tr -d "=+/" | cut -c1-32)
            APP_PASSWORD=$(openssl rand -base64 24 | tr -d "=+/" | cut -c1-32)
            
            # Terraform commands
            terraform -chdir=$ENV_PATH init
            terraform -chdir=$ENV_PATH import module.cloudsql.google_sql_database_instance.primary projects/affable-beaker-464822-b4/instances/$INSTANCE_NAME || echo "Instance does not exist or already imported"
            terraform -chdir=$ENV_PATH plan -var="sql_root_password=$ROOT_PASSWORD" -var="sql_app_password=$APP_PASSWORD"
            terraform -chdir=$ENV_PATH apply -auto-approve -var="sql_root_password=$ROOT_PASSWORD" -var="sql_app_password=$APP_PASSWORD"
            
            # Store passwords
            echo "$ROOT_PASSWORD" | gcloud secrets create cloudsql-root-password-$ENV --data-file=- --replication-policy="automatic" || echo "Secret already exists"
            echo "$APP_PASSWORD" | gcloud secrets create cloudsql-app-password-$ENV --data-file=- --replication-policy="automatic" || echo "Secret already exists"
            
            echo "âœ… $ENV deployed successfully"
          done
